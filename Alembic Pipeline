import maya.cmds as cmds
import os
import os.path
import maya.mel as mel


char_name =[]
set_name = []
new_path = []
selected_char = []


# input Framerange
startFrm = []
endFrm = []
shot_num = []

def input_frm():
    print 'old %%5'
    global startFrm
    global endFrm
    global shot_num
    startFrm= cmds.textField('strFrmBox', text=True,query = True)
    endFrm= cmds.textField('endFrmBox', text=True,query = True)
    shot_num= cmds.textField('shotFrmBox', text=True,query = True)
    endFrm = " " + endFrm
    return startFrm
    return shot_num
    return endFrm
    print startFrm
    print endFrm
    print shot_num

def selectCh( item ):
	print item
	global char_name
	global set_name
	char_name = item + '.abc'
	set_name = item
	print char_name
	print set_name
	return set_name
	return char_name
	
class abc_data(object):
    def __init__(self):
        print 'abc data warning'
        
    def shot_name(self):
        print 'halfway'
        global new_path
        file_path = cmds.file(expandName =True, q = True)
        old_path = file_path.replace( 'anim','abc', 1)
        edit_path = os.path.split(old_path)
        new_path = old_path.replace( edit_path[1], char_name, 1)
        return new_path
        
    def select_char(self):
        print 'host char'
        global selected_char
        selected_char = cmds.ls(selection = True)
        return selected_char
        
class abcExport(abc_data):
    def __init__(self):
        print input_frm()
        self.shot_name()
        if cmds.ls(selection = True):
            self.select_char()
        else:
            print cmds.confirmDialog(title = ' Warning!!! ' , message = ' please select an object' , cancelButton='Oky' )
        self.char_export()
        self.epath_check()
        print 'abc export warning'
    
    def char_export(self):
        attrZ = " " + "|" + selected_char[0] + " " + "-file" + " "    
        common = "-frameRange " + startFrm + endFrm + " -uvWrite -writeVisibility -dataFormat ogawa -root" + attrZ + new_path
        cmds.AbcExport( j = common)

    def epath_check(self):
        if os.path.isfile(new_path):
            print cmds.confirmDialog(title = ' Sucessfully Done ' , message = ' Alembic has been replaced sucessfully' , cancelButton='Oky' )
        else:
            print cmds.confirmDialog(title = ' Error !!! ' , message = 'Error !!! not done ' , cancelButton='Oky' )

class abcImport(abc_data):
    def __init__(self):
        print input_frm()
        print ' abc import warning'
        self.rep_abc()
        self.path_check()
    

    def rep_abc(self):
        attrM = "Shot" + shot_num
        abc_file_path = '"D:/gss/Scripts/SparkMV/Shots/Shot/Shot999/3D/data/abc/file.abc"'
        new_pathA = abc_file_path.replace( 'Shot999' , attrM, 1)
        new_pathB = new_pathA.replace( "file" , set_name, 1)
        abc_data_path = ("AbcImport" + " " + "-mode import -connect" + " " + '"/"' + " " + new_pathB)
        mel.eval(abc_data_path)
        
    def path_check(self):
        path_chk = []
        path_chk = eval(new_pathB)
        if os.path.isfile(path_chk):
            print cmds.confirmDialog(title = ' Sucessfully Done ' , message = ' Alembic has been replaced sucessfully' , cancelButton='Oky' )
        else:
            print cmds.confirmDialog(title = ' Error !!! ' , message = 'Error !!! not done ' , cancelButton='Oky' )
    
    
def char_import():
    file_path = "D:/gss/Scripts/SparkMV/Assets/file.ma"
    new_path = file_path.replace("file", set_name, 1)
    cmds.file(new_path , i = True)
        


cmds.window( title="SparkMV Alembic Pipeline",bgc = (0.5,0.5,0.5) )

# Frame Layout for animators
cmds.frameLayout( label='For Animators',w = 580, h =250,  borderStyle='out', bgc = (.2,.25,.4) )

cmds.rowColumnLayout( numberOfRows=1,w = 10, h =30, cs = [(450, 40)]  )
cmds.optionMenu( label='Char Name', changeCommand= selectCh, bgc = (.4,.4,.4) )
cmds.menuItem( label='Select' )
cmds.menuItem( label='Spark' )
cmds.menuItem( label='Daemon' )
cmds.menuItem( label='Angle' )
  
cmds.textField('strFrmBox', ann = ' enter startFrame  ', ec = 'input_frm()', pht = '1001',  bgc = (.8,.8,.8) )
cmds.textField('endFrmBox', ann = ' enter endFrame  ', ec = 'input_frm()', pht = '1090',bgc = (.8,.8,.8))
cmds.button( label = 'Export abc', command = 'abcExport()', w = 80, h = 30, bgc = (.2,.25,.4))
cmds.setParent( '..' )

#for Lighters

cmds.frameLayout( label='For Lighters',w = 420, h =80,  borderStyle='out', bgc = (0.1,0.3,0.3) )
cmds.rowColumnLayout( numberOfRows=1,w = 200, h =80, cs = [(450, 40)]  )
cmds.optionMenu( label='Char Name', changeCommand= selectCh, bgc = (.4,.4,.4) )
cmds.menuItem( label='Select' )
cmds.menuItem( label='Spark' )
cmds.menuItem( label='Daemon' )
cmds.menuItem( label='Angle' )
  
cmds.button( label = 'Import Shader', command = 'char_import()', w = 80, h = 30,  bgc = (0.1,0.3,0.3) )
cmds.textField('shotFrmBox', ann = ' enter ShotNumber  ', ec = 'input_frm()', pht = '250',  bgc = (.8,.8,.8) )
cmds.button( label = 'Replace Abc', command = 'x = abcImport()', w = 80, h = 30, bgc = (0.1,0.3,0.3) )
cmds.setParent( '..' )

cmds.showWindow()

